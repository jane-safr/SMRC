//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SMRC {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("smrDataF3AEP")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class smrDataF3AEP : global::System.Data.DataSet {
        
        private WorkF3DataTable tableWorkF3;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public smrDataF3AEP() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected smrDataF3AEP(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["WorkF3"] != null)) {
                    base.Tables.Add(new WorkF3DataTable(ds.Tables["WorkF3"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WorkF3DataTable WorkF3 {
            get {
                return this.tableWorkF3;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            smrDataF3AEP cln = ((smrDataF3AEP)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["WorkF3"] != null)) {
                    base.Tables.Add(new WorkF3DataTable(ds.Tables["WorkF3"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableWorkF3 = ((WorkF3DataTable)(base.Tables["WorkF3"]));
            if ((initTable == true)) {
                if ((this.tableWorkF3 != null)) {
                    this.tableWorkF3.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "smrDataF3AEP";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/smrDataF3AEP.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableWorkF3 = new WorkF3DataTable();
            base.Tables.Add(this.tableWorkF3);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeWorkF3() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            smrDataF3AEP ds = new smrDataF3AEP();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void WorkF3RowChangeEventHandler(object sender, WorkF3RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WorkF3DataTable : global::System.Data.TypedTableBase<WorkF3Row> {
            
            private global::System.Data.DataColumn columnЗаказчик;
            
            private global::System.Data.DataColumn columnОбъект;
            
            private global::System.Data.DataColumn columnСумма91СНГ;
            
            private global::System.Data.DataColumn columnСуммаТекСНГ;
            
            private global::System.Data.DataColumn columnСумма91;
            
            private global::System.Data.DataColumn columnСуммаТек;
            
            private global::System.Data.DataColumn columnВМ;
            
            private global::System.Data.DataColumn columnВМСНГ;
            
            private global::System.Data.DataColumn columnДавальчМатериалы;
            
            private global::System.Data.DataColumn columnДавальчМатериалыСНГ;
            
            private global::System.Data.DataColumn columnОплата;
            
            private global::System.Data.DataColumn columnСуммаТекСНП;
            
            private global::System.Data.DataColumn columnKodOSR;
            
            private global::System.Data.DataColumn columnKodZak;
            
            private global::System.Data.DataColumn columnShifr;
            
            private global::System.Data.DataColumn columnIdprice;
            
            private global::System.Data.DataColumn columnSum2000;
            
            private global::System.Data.DataColumn columnSum2000SNG;
            
            private global::System.Data.DataColumn columnSum2000zu;
            
            private global::System.Data.DataColumn columnSum2000zuSNG;
            
            private global::System.Data.DataColumn columnSum2000zuSNP;
            
            private global::System.Data.DataColumn columnSum2000PerRab;
            
            private global::System.Data.DataColumn columnSum2000PerRabSNG;
            
            private global::System.Data.DataColumn columnSum2000PerRabSNP;
            
            private global::System.Data.DataColumn columnKomRash2000;
            
            private global::System.Data.DataColumn columnKomRash2000SNG;
            
            private global::System.Data.DataColumn columnKomRash2000SNP;
            
            private global::System.Data.DataColumn columnzu;
            
            private global::System.Data.DataColumn columnzuSNG;
            
            private global::System.Data.DataColumn columnzuSNP;
            
            private global::System.Data.DataColumn columnPerRab;
            
            private global::System.Data.DataColumn columnPerRabSNG;
            
            private global::System.Data.DataColumn columnPerRabSNP;
            
            private global::System.Data.DataColumn columnKomRash;
            
            private global::System.Data.DataColumn columnKomRashSNG;
            
            private global::System.Data.DataColumn columnKomRashSNP;
            
            private global::System.Data.DataColumn columnSumSNP84;
            
            private global::System.Data.DataColumn columnSumSNP91;
            
            private global::System.Data.DataColumn columnSumSNP2000;
            
            private global::System.Data.DataColumn columnNMEntpr;
            
            private global::System.Data.DataColumn columnСумма84СНГ;
            
            private global::System.Data.DataColumn columnСумма84;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkF3DataTable() {
                this.TableName = "WorkF3";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WorkF3DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected WorkF3DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ЗаказчикColumn {
                get {
                    return this.columnЗаказчик;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ОбъектColumn {
                get {
                    return this.columnОбъект;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Сумма91СНГColumn {
                get {
                    return this.columnСумма91СНГ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn СуммаТекСНГColumn {
                get {
                    return this.columnСуммаТекСНГ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Сумма91Column {
                get {
                    return this.columnСумма91;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn СуммаТекColumn {
                get {
                    return this.columnСуммаТек;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ВМColumn {
                get {
                    return this.columnВМ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ВМСНГColumn {
                get {
                    return this.columnВМСНГ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ДавальчМатериалыColumn {
                get {
                    return this.columnДавальчМатериалы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ДавальчМатериалыСНГColumn {
                get {
                    return this.columnДавальчМатериалыСНГ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ОплатаColumn {
                get {
                    return this.columnОплата;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn СуммаТекСНПColumn {
                get {
                    return this.columnСуммаТекСНП;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KodOSRColumn {
                get {
                    return this.columnKodOSR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KodZakColumn {
                get {
                    return this.columnKodZak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShifrColumn {
                get {
                    return this.columnShifr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdpriceColumn {
                get {
                    return this.columnIdprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sum2000Column {
                get {
                    return this.columnSum2000;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sum2000SNGColumn {
                get {
                    return this.columnSum2000SNG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sum2000zuColumn {
                get {
                    return this.columnSum2000zu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sum2000zuSNGColumn {
                get {
                    return this.columnSum2000zuSNG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sum2000zuSNPColumn {
                get {
                    return this.columnSum2000zuSNP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sum2000PerRabColumn {
                get {
                    return this.columnSum2000PerRab;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sum2000PerRabSNGColumn {
                get {
                    return this.columnSum2000PerRabSNG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sum2000PerRabSNPColumn {
                get {
                    return this.columnSum2000PerRabSNP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KomRash2000Column {
                get {
                    return this.columnKomRash2000;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KomRash2000SNGColumn {
                get {
                    return this.columnKomRash2000SNG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KomRash2000SNPColumn {
                get {
                    return this.columnKomRash2000SNP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn zuColumn {
                get {
                    return this.columnzu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn zuSNGColumn {
                get {
                    return this.columnzuSNG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn zuSNPColumn {
                get {
                    return this.columnzuSNP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerRabColumn {
                get {
                    return this.columnPerRab;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerRabSNGColumn {
                get {
                    return this.columnPerRabSNG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PerRabSNPColumn {
                get {
                    return this.columnPerRabSNP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KomRashColumn {
                get {
                    return this.columnKomRash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KomRashSNGColumn {
                get {
                    return this.columnKomRashSNG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KomRashSNPColumn {
                get {
                    return this.columnKomRashSNP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SumSNP84Column {
                get {
                    return this.columnSumSNP84;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SumSNP91Column {
                get {
                    return this.columnSumSNP91;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SumSNP2000Column {
                get {
                    return this.columnSumSNP2000;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NMEntprColumn {
                get {
                    return this.columnNMEntpr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Сумма84СНГColumn {
                get {
                    return this.columnСумма84СНГ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Сумма84Column {
                get {
                    return this.columnСумма84;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkF3Row this[int index] {
                get {
                    return ((WorkF3Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkF3RowChangeEventHandler WorkF3RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkF3RowChangeEventHandler WorkF3RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkF3RowChangeEventHandler WorkF3RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WorkF3RowChangeEventHandler WorkF3RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddWorkF3Row(WorkF3Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkF3Row AddWorkF3Row(
                        string Заказчик, 
                        string Объект, 
                        double Сумма91СНГ, 
                        double СуммаТекСНГ, 
                        double Сумма91, 
                        double СуммаТек, 
                        double ВМ, 
                        double ВМСНГ, 
                        double ДавальчМатериалы, 
                        double ДавальчМатериалыСНГ, 
                        double Оплата, 
                        double СуммаТекСНП, 
                        string KodOSR, 
                        string KodZak, 
                        string Shifr, 
                        byte Idprice, 
                        double Sum2000, 
                        double Sum2000SNG, 
                        double Sum2000zu, 
                        double Sum2000zuSNG, 
                        double Sum2000zuSNP, 
                        double Sum2000PerRab, 
                        double Sum2000PerRabSNG, 
                        double Sum2000PerRabSNP, 
                        double KomRash2000, 
                        double KomRash2000SNG, 
                        double KomRash2000SNP, 
                        double zu, 
                        double zuSNG, 
                        double zuSNP, 
                        double PerRab, 
                        double PerRabSNG, 
                        double PerRabSNP, 
                        double KomRash, 
                        double KomRashSNG, 
                        double KomRashSNP, 
                        double SumSNP84, 
                        double SumSNP91, 
                        double SumSNP2000, 
                        string NMEntpr, 
                        double Сумма84СНГ, 
                        double Сумма84) {
                WorkF3Row rowWorkF3Row = ((WorkF3Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Заказчик,
                        Объект,
                        Сумма91СНГ,
                        СуммаТекСНГ,
                        Сумма91,
                        СуммаТек,
                        ВМ,
                        ВМСНГ,
                        ДавальчМатериалы,
                        ДавальчМатериалыСНГ,
                        Оплата,
                        СуммаТекСНП,
                        KodOSR,
                        KodZak,
                        Shifr,
                        Idprice,
                        Sum2000,
                        Sum2000SNG,
                        Sum2000zu,
                        Sum2000zuSNG,
                        Sum2000zuSNP,
                        Sum2000PerRab,
                        Sum2000PerRabSNG,
                        Sum2000PerRabSNP,
                        KomRash2000,
                        KomRash2000SNG,
                        KomRash2000SNP,
                        zu,
                        zuSNG,
                        zuSNP,
                        PerRab,
                        PerRabSNG,
                        PerRabSNP,
                        KomRash,
                        KomRashSNG,
                        KomRashSNP,
                        SumSNP84,
                        SumSNP91,
                        SumSNP2000,
                        NMEntpr,
                        Сумма84СНГ,
                        Сумма84};
                rowWorkF3Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowWorkF3Row);
                return rowWorkF3Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WorkF3DataTable cln = ((WorkF3DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WorkF3DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnЗаказчик = base.Columns["Заказчик"];
                this.columnОбъект = base.Columns["Объект"];
                this.columnСумма91СНГ = base.Columns["Сумма91СНГ"];
                this.columnСуммаТекСНГ = base.Columns["СуммаТекСНГ"];
                this.columnСумма91 = base.Columns["Сумма91"];
                this.columnСуммаТек = base.Columns["СуммаТек"];
                this.columnВМ = base.Columns["ВМ"];
                this.columnВМСНГ = base.Columns["ВМСНГ"];
                this.columnДавальчМатериалы = base.Columns["ДавальчМатериалы"];
                this.columnДавальчМатериалыСНГ = base.Columns["ДавальчМатериалыСНГ"];
                this.columnОплата = base.Columns["Оплата"];
                this.columnСуммаТекСНП = base.Columns["СуммаТекСНП"];
                this.columnKodOSR = base.Columns["KodOSR"];
                this.columnKodZak = base.Columns["KodZak"];
                this.columnShifr = base.Columns["Shifr"];
                this.columnIdprice = base.Columns["Idprice"];
                this.columnSum2000 = base.Columns["Sum2000"];
                this.columnSum2000SNG = base.Columns["Sum2000SNG"];
                this.columnSum2000zu = base.Columns["Sum2000zu"];
                this.columnSum2000zuSNG = base.Columns["Sum2000zuSNG"];
                this.columnSum2000zuSNP = base.Columns["Sum2000zuSNP"];
                this.columnSum2000PerRab = base.Columns["Sum2000PerRab"];
                this.columnSum2000PerRabSNG = base.Columns["Sum2000PerRabSNG"];
                this.columnSum2000PerRabSNP = base.Columns["Sum2000PerRabSNP"];
                this.columnKomRash2000 = base.Columns["KomRash2000"];
                this.columnKomRash2000SNG = base.Columns["KomRash2000SNG"];
                this.columnKomRash2000SNP = base.Columns["KomRash2000SNP"];
                this.columnzu = base.Columns["zu"];
                this.columnzuSNG = base.Columns["zuSNG"];
                this.columnzuSNP = base.Columns["zuSNP"];
                this.columnPerRab = base.Columns["PerRab"];
                this.columnPerRabSNG = base.Columns["PerRabSNG"];
                this.columnPerRabSNP = base.Columns["PerRabSNP"];
                this.columnKomRash = base.Columns["KomRash"];
                this.columnKomRashSNG = base.Columns["KomRashSNG"];
                this.columnKomRashSNP = base.Columns["KomRashSNP"];
                this.columnSumSNP84 = base.Columns["SumSNP84"];
                this.columnSumSNP91 = base.Columns["SumSNP91"];
                this.columnSumSNP2000 = base.Columns["SumSNP2000"];
                this.columnNMEntpr = base.Columns["NMEntpr"];
                this.columnСумма84СНГ = base.Columns["Сумма84СНГ"];
                this.columnСумма84 = base.Columns["Сумма84"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnЗаказчик = new global::System.Data.DataColumn("Заказчик", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗаказчик);
                this.columnОбъект = new global::System.Data.DataColumn("Объект", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОбъект);
                this.columnСумма91СНГ = new global::System.Data.DataColumn("Сумма91СНГ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСумма91СНГ);
                this.columnСуммаТекСНГ = new global::System.Data.DataColumn("СуммаТекСНГ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСуммаТекСНГ);
                this.columnСумма91 = new global::System.Data.DataColumn("Сумма91", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСумма91);
                this.columnСуммаТек = new global::System.Data.DataColumn("СуммаТек", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСуммаТек);
                this.columnВМ = new global::System.Data.DataColumn("ВМ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВМ);
                this.columnВМСНГ = new global::System.Data.DataColumn("ВМСНГ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВМСНГ);
                this.columnДавальчМатериалы = new global::System.Data.DataColumn("ДавальчМатериалы", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДавальчМатериалы);
                this.columnДавальчМатериалыСНГ = new global::System.Data.DataColumn("ДавальчМатериалыСНГ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДавальчМатериалыСНГ);
                this.columnОплата = new global::System.Data.DataColumn("Оплата", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОплата);
                this.columnСуммаТекСНП = new global::System.Data.DataColumn("СуммаТекСНП", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСуммаТекСНП);
                this.columnKodOSR = new global::System.Data.DataColumn("KodOSR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodOSR);
                this.columnKodZak = new global::System.Data.DataColumn("KodZak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodZak);
                this.columnShifr = new global::System.Data.DataColumn("Shifr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShifr);
                this.columnIdprice = new global::System.Data.DataColumn("Idprice", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdprice);
                this.columnSum2000 = new global::System.Data.DataColumn("Sum2000", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSum2000);
                this.columnSum2000SNG = new global::System.Data.DataColumn("Sum2000SNG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSum2000SNG);
                this.columnSum2000zu = new global::System.Data.DataColumn("Sum2000zu", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSum2000zu);
                this.columnSum2000zuSNG = new global::System.Data.DataColumn("Sum2000zuSNG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSum2000zuSNG);
                this.columnSum2000zuSNP = new global::System.Data.DataColumn("Sum2000zuSNP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSum2000zuSNP);
                this.columnSum2000PerRab = new global::System.Data.DataColumn("Sum2000PerRab", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSum2000PerRab);
                this.columnSum2000PerRabSNG = new global::System.Data.DataColumn("Sum2000PerRabSNG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSum2000PerRabSNG);
                this.columnSum2000PerRabSNP = new global::System.Data.DataColumn("Sum2000PerRabSNP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSum2000PerRabSNP);
                this.columnKomRash2000 = new global::System.Data.DataColumn("KomRash2000", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKomRash2000);
                this.columnKomRash2000SNG = new global::System.Data.DataColumn("KomRash2000SNG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKomRash2000SNG);
                this.columnKomRash2000SNP = new global::System.Data.DataColumn("KomRash2000SNP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKomRash2000SNP);
                this.columnzu = new global::System.Data.DataColumn("zu", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzu);
                this.columnzuSNG = new global::System.Data.DataColumn("zuSNG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzuSNG);
                this.columnzuSNP = new global::System.Data.DataColumn("zuSNP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzuSNP);
                this.columnPerRab = new global::System.Data.DataColumn("PerRab", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerRab);
                this.columnPerRabSNG = new global::System.Data.DataColumn("PerRabSNG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerRabSNG);
                this.columnPerRabSNP = new global::System.Data.DataColumn("PerRabSNP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerRabSNP);
                this.columnKomRash = new global::System.Data.DataColumn("KomRash", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKomRash);
                this.columnKomRashSNG = new global::System.Data.DataColumn("KomRashSNG", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKomRashSNG);
                this.columnKomRashSNP = new global::System.Data.DataColumn("KomRashSNP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKomRashSNP);
                this.columnSumSNP84 = new global::System.Data.DataColumn("SumSNP84", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumSNP84);
                this.columnSumSNP91 = new global::System.Data.DataColumn("SumSNP91", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumSNP91);
                this.columnSumSNP2000 = new global::System.Data.DataColumn("SumSNP2000", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumSNP2000);
                this.columnNMEntpr = new global::System.Data.DataColumn("NMEntpr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNMEntpr);
                this.columnСумма84СНГ = new global::System.Data.DataColumn("Сумма84СНГ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСумма84СНГ);
                this.columnСумма84 = new global::System.Data.DataColumn("Сумма84", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСумма84);
                this.columnЗаказчик.MaxLength = 200;
                this.columnОбъект.MaxLength = 803;
                this.columnKodOSR.AllowDBNull = false;
                this.columnKodOSR.MaxLength = 8;
                this.columnKodZak.MaxLength = 100;
                this.columnShifr.AllowDBNull = false;
                this.columnShifr.MaxLength = 1;
                this.columnzuSNG.AllowDBNull = false;
                this.columnNMEntpr.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkF3Row NewWorkF3Row() {
                return ((WorkF3Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WorkF3Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WorkF3Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WorkF3RowChanged != null)) {
                    this.WorkF3RowChanged(this, new WorkF3RowChangeEvent(((WorkF3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WorkF3RowChanging != null)) {
                    this.WorkF3RowChanging(this, new WorkF3RowChangeEvent(((WorkF3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WorkF3RowDeleted != null)) {
                    this.WorkF3RowDeleted(this, new WorkF3RowChangeEvent(((WorkF3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WorkF3RowDeleting != null)) {
                    this.WorkF3RowDeleting(this, new WorkF3RowChangeEvent(((WorkF3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveWorkF3Row(WorkF3Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                smrDataF3AEP ds = new smrDataF3AEP();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WorkF3DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WorkF3Row : global::System.Data.DataRow {
            
            private WorkF3DataTable tableWorkF3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WorkF3Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWorkF3 = ((WorkF3DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Заказчик {
                get {
                    try {
                        return ((string)(this[this.tableWorkF3.ЗаказчикColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Заказчик\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.ЗаказчикColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Объект {
                get {
                    try {
                        return ((string)(this[this.tableWorkF3.ОбъектColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Объект\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.ОбъектColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Сумма91СНГ {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.Сумма91СНГColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Сумма91СНГ\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.Сумма91СНГColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double СуммаТекСНГ {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.СуммаТекСНГColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'СуммаТекСНГ\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.СуммаТекСНГColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Сумма91 {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.Сумма91Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Сумма91\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.Сумма91Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double СуммаТек {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.СуммаТекColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'СуммаТек\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.СуммаТекColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ВМ {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.ВМColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ВМ\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.ВМColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ВМСНГ {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.ВМСНГColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ВМСНГ\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.ВМСНГColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ДавальчМатериалы {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.ДавальчМатериалыColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ДавальчМатериалы\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.ДавальчМатериалыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ДавальчМатериалыСНГ {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.ДавальчМатериалыСНГColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ДавальчМатериалыСНГ\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.ДавальчМатериалыСНГColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Оплата {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.ОплатаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Оплата\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.ОплатаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double СуммаТекСНП {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.СуммаТекСНПColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'СуммаТекСНП\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.СуммаТекСНПColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KodOSR {
                get {
                    return ((string)(this[this.tableWorkF3.KodOSRColumn]));
                }
                set {
                    this[this.tableWorkF3.KodOSRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KodZak {
                get {
                    try {
                        return ((string)(this[this.tableWorkF3.KodZakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodZak\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.KodZakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Shifr {
                get {
                    return ((string)(this[this.tableWorkF3.ShifrColumn]));
                }
                set {
                    this[this.tableWorkF3.ShifrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Idprice {
                get {
                    try {
                        return ((byte)(this[this.tableWorkF3.IdpriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Idprice\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.IdpriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Sum2000 {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.Sum2000Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sum2000\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.Sum2000Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Sum2000SNG {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.Sum2000SNGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sum2000SNG\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.Sum2000SNGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Sum2000zu {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.Sum2000zuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sum2000zu\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.Sum2000zuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Sum2000zuSNG {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.Sum2000zuSNGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sum2000zuSNG\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.Sum2000zuSNGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Sum2000zuSNP {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.Sum2000zuSNPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sum2000zuSNP\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.Sum2000zuSNPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Sum2000PerRab {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.Sum2000PerRabColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sum2000PerRab\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.Sum2000PerRabColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Sum2000PerRabSNG {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.Sum2000PerRabSNGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sum2000PerRabSNG\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.Sum2000PerRabSNGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Sum2000PerRabSNP {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.Sum2000PerRabSNPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sum2000PerRabSNP\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.Sum2000PerRabSNPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KomRash2000 {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.KomRash2000Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KomRash2000\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.KomRash2000Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KomRash2000SNG {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.KomRash2000SNGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KomRash2000SNG\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.KomRash2000SNGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KomRash2000SNP {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.KomRash2000SNPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KomRash2000SNP\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.KomRash2000SNPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double zu {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.zuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'zu\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.zuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double zuSNG {
                get {
                    return ((double)(this[this.tableWorkF3.zuSNGColumn]));
                }
                set {
                    this[this.tableWorkF3.zuSNGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double zuSNP {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.zuSNPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'zuSNP\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.zuSNPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PerRab {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.PerRabColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerRab\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.PerRabColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PerRabSNG {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.PerRabSNGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerRabSNG\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.PerRabSNGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PerRabSNP {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.PerRabSNPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PerRabSNP\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.PerRabSNPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KomRash {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.KomRashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KomRash\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.KomRashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KomRashSNG {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.KomRashSNGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KomRashSNG\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.KomRashSNGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KomRashSNP {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.KomRashSNPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KomRashSNP\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.KomRashSNPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SumSNP84 {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.SumSNP84Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SumSNP84\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.SumSNP84Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SumSNP91 {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.SumSNP91Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SumSNP91\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.SumSNP91Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SumSNP2000 {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.SumSNP2000Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SumSNP2000\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.SumSNP2000Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NMEntpr {
                get {
                    try {
                        return ((string)(this[this.tableWorkF3.NMEntprColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NMEntpr\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.NMEntprColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Сумма84СНГ {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.Сумма84СНГColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Сумма84СНГ\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.Сумма84СНГColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Сумма84 {
                get {
                    try {
                        return ((double)(this[this.tableWorkF3.Сумма84Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Сумма84\' in table \'WorkF3\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWorkF3.Сумма84Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsЗаказчикNull() {
                return this.IsNull(this.tableWorkF3.ЗаказчикColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetЗаказчикNull() {
                this[this.tableWorkF3.ЗаказчикColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsОбъектNull() {
                return this.IsNull(this.tableWorkF3.ОбъектColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetОбъектNull() {
                this[this.tableWorkF3.ОбъектColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsСумма91СНГNull() {
                return this.IsNull(this.tableWorkF3.Сумма91СНГColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetСумма91СНГNull() {
                this[this.tableWorkF3.Сумма91СНГColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsСуммаТекСНГNull() {
                return this.IsNull(this.tableWorkF3.СуммаТекСНГColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetСуммаТекСНГNull() {
                this[this.tableWorkF3.СуммаТекСНГColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsСумма91Null() {
                return this.IsNull(this.tableWorkF3.Сумма91Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetСумма91Null() {
                this[this.tableWorkF3.Сумма91Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsСуммаТекNull() {
                return this.IsNull(this.tableWorkF3.СуммаТекColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetСуммаТекNull() {
                this[this.tableWorkF3.СуммаТекColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВМNull() {
                return this.IsNull(this.tableWorkF3.ВМColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВМNull() {
                this[this.tableWorkF3.ВМColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsВМСНГNull() {
                return this.IsNull(this.tableWorkF3.ВМСНГColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetВМСНГNull() {
                this[this.tableWorkF3.ВМСНГColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДавальчМатериалыNull() {
                return this.IsNull(this.tableWorkF3.ДавальчМатериалыColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДавальчМатериалыNull() {
                this[this.tableWorkF3.ДавальчМатериалыColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДавальчМатериалыСНГNull() {
                return this.IsNull(this.tableWorkF3.ДавальчМатериалыСНГColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДавальчМатериалыСНГNull() {
                this[this.tableWorkF3.ДавальчМатериалыСНГColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsОплатаNull() {
                return this.IsNull(this.tableWorkF3.ОплатаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetОплатаNull() {
                this[this.tableWorkF3.ОплатаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsСуммаТекСНПNull() {
                return this.IsNull(this.tableWorkF3.СуммаТекСНПColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetСуммаТекСНПNull() {
                this[this.tableWorkF3.СуммаТекСНПColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKodZakNull() {
                return this.IsNull(this.tableWorkF3.KodZakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKodZakNull() {
                this[this.tableWorkF3.KodZakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdpriceNull() {
                return this.IsNull(this.tableWorkF3.IdpriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdpriceNull() {
                this[this.tableWorkF3.IdpriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSum2000Null() {
                return this.IsNull(this.tableWorkF3.Sum2000Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSum2000Null() {
                this[this.tableWorkF3.Sum2000Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSum2000SNGNull() {
                return this.IsNull(this.tableWorkF3.Sum2000SNGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSum2000SNGNull() {
                this[this.tableWorkF3.Sum2000SNGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSum2000zuNull() {
                return this.IsNull(this.tableWorkF3.Sum2000zuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSum2000zuNull() {
                this[this.tableWorkF3.Sum2000zuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSum2000zuSNGNull() {
                return this.IsNull(this.tableWorkF3.Sum2000zuSNGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSum2000zuSNGNull() {
                this[this.tableWorkF3.Sum2000zuSNGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSum2000zuSNPNull() {
                return this.IsNull(this.tableWorkF3.Sum2000zuSNPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSum2000zuSNPNull() {
                this[this.tableWorkF3.Sum2000zuSNPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSum2000PerRabNull() {
                return this.IsNull(this.tableWorkF3.Sum2000PerRabColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSum2000PerRabNull() {
                this[this.tableWorkF3.Sum2000PerRabColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSum2000PerRabSNGNull() {
                return this.IsNull(this.tableWorkF3.Sum2000PerRabSNGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSum2000PerRabSNGNull() {
                this[this.tableWorkF3.Sum2000PerRabSNGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSum2000PerRabSNPNull() {
                return this.IsNull(this.tableWorkF3.Sum2000PerRabSNPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSum2000PerRabSNPNull() {
                this[this.tableWorkF3.Sum2000PerRabSNPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKomRash2000Null() {
                return this.IsNull(this.tableWorkF3.KomRash2000Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKomRash2000Null() {
                this[this.tableWorkF3.KomRash2000Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKomRash2000SNGNull() {
                return this.IsNull(this.tableWorkF3.KomRash2000SNGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKomRash2000SNGNull() {
                this[this.tableWorkF3.KomRash2000SNGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKomRash2000SNPNull() {
                return this.IsNull(this.tableWorkF3.KomRash2000SNPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKomRash2000SNPNull() {
                this[this.tableWorkF3.KomRash2000SNPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IszuNull() {
                return this.IsNull(this.tableWorkF3.zuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetzuNull() {
                this[this.tableWorkF3.zuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IszuSNPNull() {
                return this.IsNull(this.tableWorkF3.zuSNPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetzuSNPNull() {
                this[this.tableWorkF3.zuSNPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerRabNull() {
                return this.IsNull(this.tableWorkF3.PerRabColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerRabNull() {
                this[this.tableWorkF3.PerRabColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerRabSNGNull() {
                return this.IsNull(this.tableWorkF3.PerRabSNGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerRabSNGNull() {
                this[this.tableWorkF3.PerRabSNGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerRabSNPNull() {
                return this.IsNull(this.tableWorkF3.PerRabSNPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPerRabSNPNull() {
                this[this.tableWorkF3.PerRabSNPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKomRashNull() {
                return this.IsNull(this.tableWorkF3.KomRashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKomRashNull() {
                this[this.tableWorkF3.KomRashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKomRashSNGNull() {
                return this.IsNull(this.tableWorkF3.KomRashSNGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKomRashSNGNull() {
                this[this.tableWorkF3.KomRashSNGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKomRashSNPNull() {
                return this.IsNull(this.tableWorkF3.KomRashSNPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKomRashSNPNull() {
                this[this.tableWorkF3.KomRashSNPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSumSNP84Null() {
                return this.IsNull(this.tableWorkF3.SumSNP84Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSumSNP84Null() {
                this[this.tableWorkF3.SumSNP84Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSumSNP91Null() {
                return this.IsNull(this.tableWorkF3.SumSNP91Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSumSNP91Null() {
                this[this.tableWorkF3.SumSNP91Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSumSNP2000Null() {
                return this.IsNull(this.tableWorkF3.SumSNP2000Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSumSNP2000Null() {
                this[this.tableWorkF3.SumSNP2000Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNMEntprNull() {
                return this.IsNull(this.tableWorkF3.NMEntprColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNMEntprNull() {
                this[this.tableWorkF3.NMEntprColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsСумма84СНГNull() {
                return this.IsNull(this.tableWorkF3.Сумма84СНГColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetСумма84СНГNull() {
                this[this.tableWorkF3.Сумма84СНГColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsСумма84Null() {
                return this.IsNull(this.tableWorkF3.Сумма84Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetСумма84Null() {
                this[this.tableWorkF3.Сумма84Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class WorkF3RowChangeEvent : global::System.EventArgs {
            
            private WorkF3Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkF3RowChangeEvent(WorkF3Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WorkF3Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SMRC.smrDataF3AEPTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WorkF3TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public WorkF3TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WorkF3";
            tableMapping.ColumnMappings.Add("Заказчик", "Заказчик");
            tableMapping.ColumnMappings.Add("Объект", "Объект");
            tableMapping.ColumnMappings.Add("Сумма91СНГ", "Сумма91СНГ");
            tableMapping.ColumnMappings.Add("СуммаТекСНГ", "СуммаТекСНГ");
            tableMapping.ColumnMappings.Add("Сумма91", "Сумма91");
            tableMapping.ColumnMappings.Add("СуммаТек", "СуммаТек");
            tableMapping.ColumnMappings.Add("ВМ", "ВМ");
            tableMapping.ColumnMappings.Add("ВМСНГ", "ВМСНГ");
            tableMapping.ColumnMappings.Add("ДавальчМатериалы", "ДавальчМатериалы");
            tableMapping.ColumnMappings.Add("ДавальчМатериалыСНГ", "ДавальчМатериалыСНГ");
            tableMapping.ColumnMappings.Add("Оплата", "Оплата");
            tableMapping.ColumnMappings.Add("СуммаТекСНП", "СуммаТекСНП");
            tableMapping.ColumnMappings.Add("KodOSR", "KodOSR");
            tableMapping.ColumnMappings.Add("KodZak", "KodZak");
            tableMapping.ColumnMappings.Add("Shifr", "Shifr");
            tableMapping.ColumnMappings.Add("Idprice", "Idprice");
            tableMapping.ColumnMappings.Add("Sum2000", "Sum2000");
            tableMapping.ColumnMappings.Add("Sum2000SNG", "Sum2000SNG");
            tableMapping.ColumnMappings.Add("Sum2000zu", "Sum2000zu");
            tableMapping.ColumnMappings.Add("Sum2000zuSNG", "Sum2000zuSNG");
            tableMapping.ColumnMappings.Add("Sum2000zuSNP", "Sum2000zuSNP");
            tableMapping.ColumnMappings.Add("Sum2000PerRab", "Sum2000PerRab");
            tableMapping.ColumnMappings.Add("Sum2000PerRabSNG", "Sum2000PerRabSNG");
            tableMapping.ColumnMappings.Add("Sum2000PerRabSNP", "Sum2000PerRabSNP");
            tableMapping.ColumnMappings.Add("KomRash2000", "KomRash2000");
            tableMapping.ColumnMappings.Add("KomRash2000SNG", "KomRash2000SNG");
            tableMapping.ColumnMappings.Add("KomRash2000SNP", "KomRash2000SNP");
            tableMapping.ColumnMappings.Add("zu", "zu");
            tableMapping.ColumnMappings.Add("zuSNG", "zuSNG");
            tableMapping.ColumnMappings.Add("zuSNP", "zuSNP");
            tableMapping.ColumnMappings.Add("PerRab", "PerRab");
            tableMapping.ColumnMappings.Add("PerRabSNG", "PerRabSNG");
            tableMapping.ColumnMappings.Add("PerRabSNP", "PerRabSNP");
            tableMapping.ColumnMappings.Add("KomRash", "KomRash");
            tableMapping.ColumnMappings.Add("KomRashSNG", "KomRashSNG");
            tableMapping.ColumnMappings.Add("KomRashSNP", "KomRashSNP");
            tableMapping.ColumnMappings.Add("SumSNP84", "SumSNP84");
            tableMapping.ColumnMappings.Add("SumSNP91", "SumSNP91");
            tableMapping.ColumnMappings.Add("SumSNP2000", "SumSNP2000");
            tableMapping.ColumnMappings.Add("NMEntpr", "NMEntpr");
            tableMapping.ColumnMappings.Add("Сумма84СНГ", "Сумма84СНГ");
            tableMapping.ColumnMappings.Add("Сумма84", "Сумма84");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[WorkF3] ([Заказчик], [Объект], [Сумма91СНГ], [СуммаТекСНГ], [Сумма91], [СуммаТек], [ВМ], [ВМСНГ], [ДавальчМатериалы], [ДавальчМатериалыСНГ], [Оплата], [СуммаТекСНП], [KodOSR], [KodZak], [Shifr], [Idprice], [Sum2000], [Sum2000SNG], [Sum2000zu], [Sum2000zuSNG], [Sum2000zuSNP], [Sum2000PerRab], [Sum2000PerRabSNG], [Sum2000PerRabSNP], [KomRash2000], [KomRash2000SNG], [KomRash2000SNP], [zu], [zuSNG], [zuSNP], [PerRab], [PerRabSNG], [PerRabSNP], [KomRash], [KomRashSNG], [KomRashSNP], [SumSNP84], [SumSNP91], [SumSNP2000], [NMEntpr], [Сумма84СНГ], [Сумма84]) VALUES (@Заказчик, @Объект, @Сумма91СНГ, @СуммаТекСНГ, @Сумма91, @СуммаТек, @ВМ, @ВМСНГ, @ДавальчМатериалы, @ДавальчМатериалыСНГ, @Оплата, @СуммаТекСНП, @KodOSR, @KodZak, @Shifr, @Idprice, @Sum2000, @Sum2000SNG, @Sum2000zu, @Sum2000zuSNG, @Sum2000zuSNP, @Sum2000PerRab, @Sum2000PerRabSNG, @Sum2000PerRabSNP, @KomRash2000, @KomRash2000SNG, @KomRash2000SNP, @zu, @zuSNG, @zuSNP, @PerRab, @PerRabSNG, @PerRabSNP, @KomRash, @KomRashSNG, @KomRashSNP, @SumSNP84, @SumSNP91, @SumSNP2000, @NMEntpr, @Сумма84СНГ, @Сумма84)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Заказчик", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Заказчик", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Объект", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Объект", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма91СНГ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма91СНГ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@СуммаТекСНГ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СуммаТекСНГ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма91", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма91", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@СуммаТек", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СуммаТек", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ВМ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВМ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ВМСНГ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВМСНГ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ДавальчМатериалы", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДавальчМатериалы", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ДавальчМатериалыСНГ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДавальчМатериалыСНГ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Оплата", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Оплата", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@СуммаТекСНП", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СуммаТекСНП", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KodOSR", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KodOSR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KodZak", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KodZak", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shifr", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shifr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Idprice", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Idprice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sum2000", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sum2000", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sum2000SNG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sum2000SNG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sum2000zu", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sum2000zu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sum2000zuSNG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sum2000zuSNG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sum2000zuSNP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sum2000zuSNP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sum2000PerRab", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sum2000PerRab", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sum2000PerRabSNG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sum2000PerRabSNG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sum2000PerRabSNP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sum2000PerRabSNP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KomRash2000", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KomRash2000", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KomRash2000SNG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KomRash2000SNG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KomRash2000SNP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KomRash2000SNP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zu", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zuSNG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zuSNG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zuSNP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zuSNP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PerRab", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerRab", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PerRabSNG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerRabSNG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PerRabSNP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PerRabSNP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KomRash", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KomRash", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KomRashSNG", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KomRashSNG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KomRashSNP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KomRashSNP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumSNP84", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumSNP84", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumSNP91", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumSNP91", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SumSNP2000", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SumSNP2000", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NMEntpr", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NMEntpr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма84СНГ", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма84СНГ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Сумма84", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Сумма84", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SMRC.Properties.Settings.Default.smrConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Заказчик, Объект, Сумма91СНГ, СуммаТекСНГ, Сумма91, СуммаТек, ВМ, ВМСНГ, ДавальчМатериалы, ДавальчМатериалыСНГ, Оплата, СуммаТекСНП, KodOSR, KodZak, Shifr, Idprice, Sum2000, Sum2000SNG, Sum2000zu, Sum2000zuSNG, Sum2000zuSNP, Sum2000PerRab, Sum2000PerRabSNG, Sum2000PerRabSNP, KomRash2000, KomRash2000SNG, KomRash2000SNP, zu, zuSNG, zuSNP, PerRab, PerRabSNG, PerRabSNP, KomRash, KomRashSNG, KomRashSNP, SumSNP84, SumSNP91, SumSNP2000, NMEntpr,Сумма84СНГ, Сумма84 FROM dbo.WorkF3";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(smrDataF3AEP.WorkF3DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual smrDataF3AEP.WorkF3DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            smrDataF3AEP.WorkF3DataTable dataTable = new smrDataF3AEP.WorkF3DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(smrDataF3AEP.WorkF3DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(smrDataF3AEP dataSet) {
            return this.Adapter.Update(dataSet, "WorkF3");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Заказчик, 
                    string Объект, 
                    global::System.Nullable<double> Сумма91СНГ, 
                    global::System.Nullable<double> СуммаТекСНГ, 
                    global::System.Nullable<double> Сумма91, 
                    global::System.Nullable<double> СуммаТек, 
                    global::System.Nullable<double> ВМ, 
                    global::System.Nullable<double> ВМСНГ, 
                    global::System.Nullable<double> ДавальчМатериалы, 
                    global::System.Nullable<double> ДавальчМатериалыСНГ, 
                    global::System.Nullable<double> Оплата, 
                    global::System.Nullable<double> СуммаТекСНП, 
                    string KodOSR, 
                    string KodZak, 
                    string Shifr, 
                    global::System.Nullable<byte> Idprice, 
                    global::System.Nullable<double> Sum2000, 
                    global::System.Nullable<double> Sum2000SNG, 
                    global::System.Nullable<double> Sum2000zu, 
                    global::System.Nullable<double> Sum2000zuSNG, 
                    global::System.Nullable<double> Sum2000zuSNP, 
                    global::System.Nullable<double> Sum2000PerRab, 
                    global::System.Nullable<double> Sum2000PerRabSNG, 
                    global::System.Nullable<double> Sum2000PerRabSNP, 
                    global::System.Nullable<double> KomRash2000, 
                    global::System.Nullable<double> KomRash2000SNG, 
                    global::System.Nullable<double> KomRash2000SNP, 
                    global::System.Nullable<double> zu, 
                    double zuSNG, 
                    global::System.Nullable<double> zuSNP, 
                    global::System.Nullable<double> PerRab, 
                    global::System.Nullable<double> PerRabSNG, 
                    global::System.Nullable<double> PerRabSNP, 
                    global::System.Nullable<double> KomRash, 
                    global::System.Nullable<double> KomRashSNG, 
                    global::System.Nullable<double> KomRashSNP, 
                    global::System.Nullable<double> SumSNP84, 
                    global::System.Nullable<double> SumSNP91, 
                    global::System.Nullable<double> SumSNP2000, 
                    string NMEntpr, 
                    global::System.Nullable<double> Сумма84СНГ, 
                    global::System.Nullable<double> Сумма84) {
            if ((Заказчик == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Заказчик));
            }
            if ((Объект == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Объект));
            }
            if ((Сумма91СНГ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(Сумма91СНГ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((СуммаТекСНГ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(СуммаТекСНГ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Сумма91.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Сумма91.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((СуммаТек.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(СуммаТек.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ВМ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(ВМ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ВМСНГ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(ВМСНГ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ДавальчМатериалы.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(ДавальчМатериалы.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ДавальчМатериалыСНГ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(ДавальчМатериалыСНГ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Оплата.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(Оплата.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((СуммаТекСНП.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(СуммаТекСНП.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((KodOSR == null)) {
                throw new global::System.ArgumentNullException("KodOSR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(KodOSR));
            }
            if ((KodZak == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(KodZak));
            }
            if ((Shifr == null)) {
                throw new global::System.ArgumentNullException("Shifr");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Shifr));
            }
            if ((Idprice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((byte)(Idprice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Sum2000.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(Sum2000.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Sum2000SNG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(Sum2000SNG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Sum2000zu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(Sum2000zu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Sum2000zuSNG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(Sum2000zuSNG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Sum2000zuSNP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(Sum2000zuSNP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Sum2000PerRab.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(Sum2000PerRab.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Sum2000PerRabSNG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(Sum2000PerRabSNG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Sum2000PerRabSNP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(Sum2000PerRabSNP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((KomRash2000.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(KomRash2000.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((KomRash2000SNG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(KomRash2000SNG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((KomRash2000SNP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((double)(KomRash2000SNP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((zu.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(zu.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[28].Value = ((double)(zuSNG));
            if ((zuSNP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((double)(zuSNP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((PerRab.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((double)(PerRab.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((PerRabSNG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((double)(PerRabSNG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((PerRabSNP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((double)(PerRabSNP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((KomRash.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((double)(KomRash.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((KomRashSNG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((double)(KomRashSNG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((KomRashSNP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((double)(KomRashSNP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((SumSNP84.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((double)(SumSNP84.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((SumSNP91.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((double)(SumSNP91.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((SumSNP2000.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((double)(SumSNP2000.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((NMEntpr == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(NMEntpr));
            }
            if ((Сумма84СНГ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((double)(Сумма84СНГ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Сумма84.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((double)(Сумма84.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private WorkF3TableAdapter _workF3TableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public WorkF3TableAdapter WorkF3TableAdapter {
            get {
                return this._workF3TableAdapter;
            }
            set {
                this._workF3TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._workF3TableAdapter != null) 
                            && (this._workF3TableAdapter.Connection != null))) {
                    return this._workF3TableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._workF3TableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(smrDataF3AEP dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._workF3TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.WorkF3.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._workF3TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(smrDataF3AEP dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._workF3TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.WorkF3.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._workF3TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(smrDataF3AEP dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._workF3TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.WorkF3.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._workF3TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(smrDataF3AEP dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._workF3TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._workF3TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._workF3TableAdapter != null)) {
                    revertConnections.Add(this._workF3TableAdapter, this._workF3TableAdapter.Connection);
                    this._workF3TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._workF3TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._workF3TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._workF3TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._workF3TableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._workF3TableAdapter != null)) {
                    this._workF3TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._workF3TableAdapter]));
                    this._workF3TableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591