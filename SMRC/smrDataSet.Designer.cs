//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SMRC {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("smrDataSet")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class smrDataSet : System.Data.DataSet {
        
        private vSSRDataTable tablevSSR;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public smrDataSet() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected smrDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["vSSR"] != null)) {
                    base.Tables.Add(new vSSRDataTable(ds.Tables["vSSR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vSSRDataTable vSSR {
            get {
                return this.tablevSSR;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            smrDataSet cln = ((smrDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["vSSR"] != null)) {
                    base.Tables.Add(new vSSRDataTable(ds.Tables["vSSR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablevSSR = ((vSSRDataTable)(base.Tables["vSSR"]));
            if ((initTable == true)) {
                if ((this.tablevSSR != null)) {
                    this.tablevSSR.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "smrDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/smrDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablevSSR = new vSSRDataTable();
            base.Tables.Add(this.tablevSSR);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevSSR() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            smrDataSet ds = new smrDataSet();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void vSSRRowChangeEventHandler(object sender, vSSRRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vSSRDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnNMComplex;
            
            private System.Data.DataColumn columnNMChapter;
            
            private System.Data.DataColumn columnidOSR;
            
            private System.Data.DataColumn columnOrderNom;
            
            private System.Data.DataColumn columnOSR;
            
            private System.Data.DataColumn columnNMOSR;
            
            private System.Data.DataColumn columnStr;
            
            private System.Data.DataColumn columnMont;
            
            private System.Data.DataColumn columnObor;
            
            private System.Data.DataColumn columnProch;
            
            private System.Data.DataColumn columnSumSt;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vSSRDataTable() {
                this.TableName = "vSSR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vSSRDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vSSRDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NMComplexColumn {
                get {
                    return this.columnNMComplex;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NMChapterColumn {
                get {
                    return this.columnNMChapter;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idOSRColumn {
                get {
                    return this.columnidOSR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OrderNomColumn {
                get {
                    return this.columnOrderNom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OSRColumn {
                get {
                    return this.columnOSR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NMOSRColumn {
                get {
                    return this.columnNMOSR;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StrColumn {
                get {
                    return this.columnStr;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MontColumn {
                get {
                    return this.columnMont;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OborColumn {
                get {
                    return this.columnObor;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProchColumn {
                get {
                    return this.columnProch;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SumStColumn {
                get {
                    return this.columnSumSt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vSSRRow this[int index] {
                get {
                    return ((vSSRRow)(this.Rows[index]));
                }
            }
            
            public event vSSRRowChangeEventHandler vSSRRowChanging;
            
            public event vSSRRowChangeEventHandler vSSRRowChanged;
            
            public event vSSRRowChangeEventHandler vSSRRowDeleting;
            
            public event vSSRRowChangeEventHandler vSSRRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvSSRRow(vSSRRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vSSRRow AddvSSRRow(string NMComplex, string NMChapter, int idOSR, int OrderNom, string OSR, string NMOSR, double Str, double Mont, double Obor, double Proch, double SumSt) {
                vSSRRow rowvSSRRow = ((vSSRRow)(this.NewRow()));
                rowvSSRRow.ItemArray = new object[] {
                        NMComplex,
                        NMChapter,
                        idOSR,
                        OrderNom,
                        OSR,
                        NMOSR,
                        Str,
                        Mont,
                        Obor,
                        Proch,
                        SumSt};
                this.Rows.Add(rowvSSRRow);
                return rowvSSRRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vSSRRow FindByidOSR(int idOSR) {
                return ((vSSRRow)(this.Rows.Find(new object[] {
                            idOSR})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                vSSRDataTable cln = ((vSSRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new vSSRDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNMComplex = base.Columns["NMComplex"];
                this.columnNMChapter = base.Columns["NMChapter"];
                this.columnidOSR = base.Columns["idOSR"];
                this.columnOrderNom = base.Columns["OrderNom"];
                this.columnOSR = base.Columns["OSR"];
                this.columnNMOSR = base.Columns["NMOSR"];
                this.columnStr = base.Columns["Str"];
                this.columnMont = base.Columns["Mont"];
                this.columnObor = base.Columns["Obor"];
                this.columnProch = base.Columns["Proch"];
                this.columnSumSt = base.Columns["SumSt"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNMComplex = new System.Data.DataColumn("NMComplex", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNMComplex);
                this.columnNMChapter = new System.Data.DataColumn("NMChapter", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNMChapter);
                this.columnidOSR = new System.Data.DataColumn("idOSR", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidOSR);
                this.columnOrderNom = new System.Data.DataColumn("OrderNom", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNom);
                this.columnOSR = new System.Data.DataColumn("OSR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSR);
                this.columnNMOSR = new System.Data.DataColumn("NMOSR", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNMOSR);
                this.columnStr = new System.Data.DataColumn("Str", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStr);
                this.columnMont = new System.Data.DataColumn("Mont", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMont);
                this.columnObor = new System.Data.DataColumn("Obor", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnObor);
                this.columnProch = new System.Data.DataColumn("Proch", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProch);
                this.columnSumSt = new System.Data.DataColumn("SumSt", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumSt);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnidOSR}, true));
                this.columnNMComplex.AllowDBNull = false;
                this.columnNMComplex.MaxLength = 500;
                this.columnNMChapter.AllowDBNull = false;
                this.columnNMChapter.MaxLength = 300;
                this.columnidOSR.AllowDBNull = false;
                this.columnidOSR.Unique = true;
                this.columnOrderNom.AllowDBNull = false;
                this.columnOSR.AllowDBNull = false;
                this.columnOSR.MaxLength = 200;
                this.columnNMOSR.AllowDBNull = false;
                this.columnNMOSR.MaxLength = 500;
                this.columnStr.AllowDBNull = false;
                this.columnMont.AllowDBNull = false;
                this.columnObor.AllowDBNull = false;
                this.columnProch.AllowDBNull = false;
                this.columnSumSt.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vSSRRow NewvSSRRow() {
                return ((vSSRRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new vSSRRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(vSSRRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vSSRRowChanged != null)) {
                    this.vSSRRowChanged(this, new vSSRRowChangeEvent(((vSSRRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vSSRRowChanging != null)) {
                    this.vSSRRowChanging(this, new vSSRRowChangeEvent(((vSSRRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vSSRRowDeleted != null)) {
                    this.vSSRRowDeleted(this, new vSSRRowChangeEvent(((vSSRRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vSSRRowDeleting != null)) {
                    this.vSSRRowDeleting(this, new vSSRRowChangeEvent(((vSSRRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevSSRRow(vSSRRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                smrDataSet ds = new smrDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vSSRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vSSRRow : System.Data.DataRow {
            
            private vSSRDataTable tablevSSR;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vSSRRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevSSR = ((vSSRDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NMComplex {
                get {
                    return ((string)(this[this.tablevSSR.NMComplexColumn]));
                }
                set {
                    this[this.tablevSSR.NMComplexColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NMChapter {
                get {
                    return ((string)(this[this.tablevSSR.NMChapterColumn]));
                }
                set {
                    this[this.tablevSSR.NMChapterColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idOSR {
                get {
                    return ((int)(this[this.tablevSSR.idOSRColumn]));
                }
                set {
                    this[this.tablevSSR.idOSRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OrderNom {
                get {
                    return ((int)(this[this.tablevSSR.OrderNomColumn]));
                }
                set {
                    this[this.tablevSSR.OrderNomColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OSR {
                get {
                    return ((string)(this[this.tablevSSR.OSRColumn]));
                }
                set {
                    this[this.tablevSSR.OSRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NMOSR {
                get {
                    return ((string)(this[this.tablevSSR.NMOSRColumn]));
                }
                set {
                    this[this.tablevSSR.NMOSRColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Str {
                get {
                    return ((double)(this[this.tablevSSR.StrColumn]));
                }
                set {
                    this[this.tablevSSR.StrColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Mont {
                get {
                    return ((double)(this[this.tablevSSR.MontColumn]));
                }
                set {
                    this[this.tablevSSR.MontColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Obor {
                get {
                    return ((double)(this[this.tablevSSR.OborColumn]));
                }
                set {
                    this[this.tablevSSR.OborColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Proch {
                get {
                    return ((double)(this[this.tablevSSR.ProchColumn]));
                }
                set {
                    this[this.tablevSSR.ProchColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SumSt {
                get {
                    try {
                        return ((double)(this[this.tablevSSR.SumStColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SumSt\' in table \'vSSR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevSSR.SumStColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumStNull() {
                return this.IsNull(this.tablevSSR.SumStColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumStNull() {
                this[this.tablevSSR.SumStColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vSSRRowChangeEvent : System.EventArgs {
            
            private vSSRRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vSSRRowChangeEvent(vSSRRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vSSRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SMRC.smrDataSetTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vSSRTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vSSRTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vSSR";
            tableMapping.ColumnMappings.Add("NMComplex", "NMComplex");
            tableMapping.ColumnMappings.Add("NMChapter", "NMChapter");
            tableMapping.ColumnMappings.Add("idOSR", "idOSR");
            tableMapping.ColumnMappings.Add("OrderNom", "OrderNom");
            tableMapping.ColumnMappings.Add("OSR", "OSR");
            tableMapping.ColumnMappings.Add("NMOSR", "NMOSR");
            tableMapping.ColumnMappings.Add("Str", "Str");
            tableMapping.ColumnMappings.Add("Mont", "Mont");
            tableMapping.ColumnMappings.Add("Obor", "Obor");
            tableMapping.ColumnMappings.Add("Proch", "Proch");
            tableMapping.ColumnMappings.Add("SumSt", "SumSt");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SMRC.Properties.Settings.Default.smrConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NMComplex, NMChapter, idOSR, OrderNom, OSR, NMOSR, Str, Mont, Obor, Proch," +
                " SumSt FROM dbo.vSSR";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(smrDataSet.vSSRDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual smrDataSet.vSSRDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            smrDataSet.vSSRDataTable dataTable = new smrDataSet.vSSRDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591